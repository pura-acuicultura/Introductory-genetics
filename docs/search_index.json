[["alphasimr.html", "Chapter 2 AlphaSimR 2.1 Introduction 2.2 Creating founder haplotypes 2.3 Setting simulation parameters 2.4 Adding traits to a breeding simulation", " Chapter 2 AlphaSimR 2.1 Introduction library(AlphaSimR) library(tidyverse) 2.2 Creating founder haplotypes The first step in developing a population for simulation is the definition of founder haplotypes. In creating founder haplotypes, the genomic architecture of the to be simulated organism is defined. In AlphaSimR, haplotypes are binary strings of 0s and 1s. Strings are arranged in a pre-defined number of chromosomes and to a pre-defined length in units of segregation sites. Given that the custom design of haplotypes can be a bit overwhelming to first time users, the function quickHaplo can initially be used to get started. quickHaplo allows the user to easily define the number of individuals, number of chromosomes per individual, number of segregation sites per chromosome, ploidy level, and the genetic length of chromosomes in units of Morgans. An option for creating inbred founders is also possible. pop_haplos &lt;- quickHaplo(nInd = 10, # number of individuals nChr = 1, # number of chromosomes segSites = 10, # number of segregation sites genLen = 1, # genetic length in Morgans ploidy = 2L, # ploidy level of organism inbred = FALSE) # are founders inbred? quickHaplo saves haplotype information as a MapPop class object. Each slot can be accessed using @ symbol, with list slots requiring additional designations in []. The MapPop file provides a record of important genome characteristics. Knowing how to access these characteristics is important to secondary analyses of breeding simulations. pop_haplos@genMap[1] # a vector of segregation sites locations (M) per [chromosome] pop_haplos@centromere[1] # a vector of centromere location (M) per [chromosome] pop_haplos@nInd # the number of individuals pop_haplos@nChr # the number of chromosomes pop_haplos@ploidy # the ploidy of individuals pop_haplos@nLoci[1] # a vector of loci number per [chromosome] pop_haplos@geno[1] # matrices of haplotypes per [individual] Definition of haplotypes is covered in greater detail throughout chapter 1. Chromosome number, segregation sites, haplotypes maps, and centromeres are central to physical genome mapping. Genetic length is covered in a thorough investigation of recombination in AlphaSimR. 2.3 Setting simulation parameters After defining the founder population haplotypes, simulation parameters are set. As their name implies, simulation parameters define the conditions through which a simulation operates. AlphaSimR possesses a myriad of simulation parameters  far more than can be covered here. A review of the most important parameters to the breeding simulations covered throughout the book are illustrated here. The first step in defining simulation parameters is to create a SimParam object. After this is done, simulation parameters can be added sequentially. SP = SimParam$new(pop_haplos) # create a variable for storing new simulation parameters 2.4 Adding traits to a breeding simulation When paired in diploid individuals, the binary haplotypes become genotypes. At a given locus an individual can be 00, 01, or 11. While it is possible to simply simulate and evaluate genotypic changes in AlphaSimR, most breeding simulations aim to also explore phenotypic change. The first step in simulating phenotypic change is define linkages between the genotypes of specific loci and traits of interest for simulation. Traits of any complexity can be added. SP$addTraitA(nQtlPerChr = 3, # number of QTL for trait mean = 454, # mean genetic value of the trait var = 50, # variance of trait in population corA = NULL, # matrix of correlations between additive effects gamma = FALSE, # to use a gamma distribution in place of a normal distribution shape = 1, # shape parameter for gamma distribution only force = FALSE) # keep false until this is understood! "]]
